#!/usr/bin/env python
# -*- coding: utf-8 -*-


from __future__ import print_function
import argparse
import dcm2bids
import dcm2bids.dcm2bids_utils as utils
import os
import sys


def get_arguments():
    parser = argparse.ArgumentParser()

    parser.add_argument(
            "-o",
            "--bids_dir",
            required = True,
            help = "BIDS directory output",
            )

    parser.add_argument(
            "-d",
            "--dicom_dir",
            required = True,
            help = "DICOM files directory",
            )

    parser.add_argument(
            "-p",
            "--participant",
            required = True,
            help = "Name of the participant",
            )

    parser.add_argument(
            "-s",
            "--session",
            required = False,
            help = "Name of the session",
            )

    parser.add_argument(
            "-a",
            "--algorithm",
            required = True,
            help = "Algorithm describing how to parse directories",
            )

    args = parser.parse_args()
    return args


def main():
    """Let's go"""
    args = get_arguments()
    description = {}

    bidsDir = os.path.abspath(args.bids_dir)
    dicomDir = os.path.abspath(args.dicom_dir)

    # Set description
    description['participant'] = args.participant
    if args.session:
        description['session'] = args.session
    else:
        description['session'] = 'n/a'

    # Set algorithm
    algorithmClass = {
            'apneemci': 'ApneeMciParser',
            'testretest': 'TestRetestParser',
            }
    algorithmKey = args.algorithm
    if algorithmClass.has_key(algorithmKey):
        algorithm = algorithmClass[algorithmKey]
    else:
        utils.fail("{}: algorithm not implemented".format(algorithmKey))
        utils.info("Implemented algorithm:")
        print(*algorithmClass.keys(), sep="\n")
        return 0

    app = dcm2bids.App(bidsDir, dicomDir, description, algorithm)
    return app.run()


if __name__ == '__main__':
    sys.exit(main())
