#!/usr/bin/env python
# -*- coding: utf-8 -*-


import argparse
import dcm2bids
import os
import sys


def get_arguments():
    parser = argparse.ArgumentParser()

    parser.add_argument(
            "-o", "--bids_dir",
            required=True,
            help="BIDS directory output",
            )

    parser.add_argument(
            "-d", "--dicom_dir",
            required=True,
            help="DICOM files directory",
            )

    parser.add_argument(
            "-p", "--participant",
            required=True,
            help="Name of the participant",
            )

    parser.add_argument(
            "-s", "--session",
            required=False, default="n/a",
            help="Name of the session",
            )

    parser.add_argument(
            "-a", "--algorithm",
            required=False, default="DefaultParser",
            help="Algorithm describing how to parse directories",
            )

    parser.add_argument(
            "-y",
            "--yes",
            required=False, action='store_true',
            help="Launch dcm2niibatch without asking",
            )

    args = parser.parse_args()
    return args


def main():
    """Let's go"""
    args = get_arguments()

    #~~~~~~~~~~~~#
    # Validation #
    #~~~~~~~~~~~~#
    #bids_dir
    args.bids_dir = os.path.abspath(args.bids_dir)

    #dicom_dir
    if os.path.isdir(args.dicom_dir):
        args.dicom_dir = os.path.abspath(args.dicom_dir)
    else:
        dcm2bids.utils.fail("{}: is not a directory".format(args.dicom_dir))
        return 0

    #participant
    # All good

    #session
    # All good

    #algorithm
    if hasattr(dcm2bids.studyparser, args.algorithm):
        pass
    else:
        dcm2bids.utils.fail(
                "{}: algorithm not implemented".format(args.algorithm))
        dcm2bids.utils.info(
                "Implemented algorithm: DefaultParser, ApneeMciParser")
        return 0

    app = dcm2bids.App(args)
    return app.run()


if __name__ == '__main__':
    sys.exit(main())
